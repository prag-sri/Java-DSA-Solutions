********************************************************************************************************************************************************************
                                                                 Max Depth of Binary Tree
********************************************************************************************************************************************************************

InterviewBit Link:- https://www.interviewbit.com/problems/max-depth-of-binary-tree/


Given a binary tree, find its maximum depth.
The maximum depth of a binary tree is the number of nodes along the longest path from the root node down to the farthest leaf node.
NOTE : The path has to end on a leaf node.

Example :

         1
        /
       2
max depth = 2.


********************************************************************************************************************************************************************
                                                                               CODE
********************************************************************************************************************************************************************

/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    static int max;
    public int maxDepth(TreeNode A) {
        if(A==null)
            return 0;
        max= Integer.MIN_VALUE;
        depth(A,1);
        return max;
    }
    public void depth(TreeNode A, int level){
        if(A==null)
            return;
        if(A.left==null && A.right==null)
            max=Math.max(max,level);
        depth(A.left,level+1);
        depth(A.right,level+1);
    }
}
