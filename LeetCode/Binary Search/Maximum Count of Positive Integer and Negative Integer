********************************************************************************************************************************************************************
                                                     Maximum Count of Positive Integer and Negative Integer
********************************************************************************************************************************************************************

LeetCode Link:- https://leetcode.com/problems/maximum-count-of-positive-integer-and-negative-integer/description/


Given an array nums sorted in non-decreasing order, return the maximum between the number of positive integers and the number of negative integers.

In other words, if the number of positive integers in nums is pos and the number of negative integers is neg, then return the maximum of pos and neg.
Note that 0 is neither positive nor negative.

 

Example 1:

Input: nums = [-2,-1,-1,1,2,3]
Output: 3
Explanation: There are 3 positive integers and 3 negative integers. The maximum count among them is 3.
Example 2:

Input: nums = [-3,-2,-1,0,0,1,2]
Output: 3
Explanation: There are 2 positive integers and 3 negative integers. The maximum count among them is 3.
Example 3:

Input: nums = [5,20,66,1314]
Output: 4
Explanation: There are 4 positive integers and 0 negative integers. The maximum count among them is 4.
 

Constraints:

1 <= nums.length <= 2000
-2000 <= nums[i] <= 2000
nums is sorted in a non-decreasing order.



********************************************************************************************************************************************************************
                                                                               CODE
********************************************************************************************************************************************************************

class Solution {
    public int maximumCount(int[] nums) {
        int n= nums.length;

        //find max index of element which is negative
        int start=0, end=n-1;
        int negative= -1;
        while(start<=end)
        {
            int mid= (start+end)/2;
            if(nums[mid]<0)
            {
                negative= Math.max(negative,mid);
                start= mid+1;
            }
            else
                end= mid-1;
        }

        //find min index of element which is positive and not 0
        start=0; end=n-1;
        int positive= Integer.MAX_VALUE;
        while(start<=end)
        {
            int mid= (start+end)/2;
            if(nums[mid]>0)
            {
                positive= Math.min(positive,mid);
                end= mid-1;
            }
            else
                start= mid+1;
        }

        //System.out.println(negative+" "+positive+" "+(n-positive));

        return Math.max((negative+1),n-positive);
    }
}
