********************************************************************************************************************************************************************
                                                                      Merge Strings Alternately
********************************************************************************************************************************************************************

LeetCode Link:- https://leetcode.com/problems/merge-strings-alternately/description/


You are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string.

Return the merged string.

 

Example 1:

Input: word1 = "abc", word2 = "pqr"
Output: "apbqcr"
Explanation: The merged string will be merged as so:
word1:  a   b   c
word2:    p   q   r
merged: a p b q c r
Example 2:

Input: word1 = "ab", word2 = "pqrs"
Output: "apbqrs"
Explanation: Notice that as word2 is longer, "rs" is appended to the end.
word1:  a   b 
word2:    p   q   r   s
merged: a p b q   r   s
Example 3:

Input: word1 = "abcd", word2 = "pq"
Output: "apbqcd"
Explanation: Notice that as word1 is longer, "cd" is appended to the end.
word1:  a   b   c   d
word2:    p   q 
merged: a p b q c   d
 

Constraints:

1 <= word1.length, word2.length <= 100
word1 and word2 consist of lowercase English letters.



********************************************************************************************************************************************************************
                                                                               CODE
********************************************************************************************************************************************************************

class Solution {
    public String mergeAlternately(String word1, String word2) {
        //n1 -> length of word1 string
        //n2 -> length of word2 string
        int n1= word1.length();
        int n2= word2.length();

        //2 pointers approach -> i pointer points to 0th index of word1; j pointer points to 0th index of word2
        int i=0, j=0;

        // ans -> this string will be storing the ans string
        String ans= "";

        //running while loop until we reach the end of either of the two strings
        while(i<n1 && j<n2)
        {
            ans+= word1.charAt(i);
            ans+= word2.charAt(j);
            i++;
            j++;
        }

        //if either of the two strings are not finished- attaching rest of the letters to ans string
        while(i<n1)
        {
            ans+= word1.charAt(i);
            i++;
        }
        while(j<n2)
        {
            ans+= word2.charAt(j);
            j++;
        }

        //returning the final ans string
        return ans;
    }
}
