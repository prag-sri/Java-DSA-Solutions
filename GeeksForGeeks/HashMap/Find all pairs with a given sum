********************************************************************************************************************************************************************
                                                                  Find all pairs with a given sum
********************************************************************************************************************************************************************

GFG Link:- https://practice.geeksforgeeks.org/problems/find-all-pairs-whose-sum-is-x5808/1?page=1&curated[]=1&sortBy=submissions


Given two unsorted arrays A of size N and B of size M of distinct elements, the task is to find all pairs from both arrays whose sum is equal to X.

Note: All pairs should be printed in increasing order of u. For eg. for two pairs (u1,v1) and (u2,v2), if u1 < u2 then
(u1,v1) should be printed first else second.

Example 1:

Input:
A[] = {1, 2, 4, 5, 7}
B[] = {5, 6, 3, 4, 8} 
X = 9 
Output: 
1 8
4 5 
5 4
Explanation:
(1, 8), (4, 5), (5, 4) are the
pairs which sum to 9.
Example 2:
Input:
A[] = {-1, -2, 4, -6, 5, 7}
B[] = {6, 3, 4, 0} 
X = 8 
Output:
4 4 
5 3

Your Task:  
You don't need to read input or print anything. Your task is to complete the function allPairs() which takes the array A[], B[], its size N and M respectively, and an integer X as inputs and returns the sorted vector pair values of all the pairs u,v where u belongs to array A and v belongs to array B. If no such pair exists return empty vector pair.


Expected Time Complexity: O(NLog(N))
Expected Auxiliary Space: O(N)


Constraints:
1 ≤ N, M ≤ 106
-106 ≤ X, A[i], B[i] ≤ 106



********************************************************************************************************************************************************************
                                                                               CODE
********************************************************************************************************************************************************************

//User function Template for Java

/*
class pair  {  
    long first, second;  
    public pair(long first, long second)  
    {  
        this.first = first;  
        this.second = second;  
    }  
}
*/

class Solution {
    public pair[] allPairs( long A[], long B[], long N, long M, long X) {
        Arrays.sort(A);
        ArrayList<pair> temp= new ArrayList<>();
        HashMap<Long,Integer> map= new HashMap<>();
        for(int i=0; i<M; i++)
            map.put(B[i],1);
            
        for(int i=0; i<N; i++)
        {
            long num= X-A[i];
            if(map.containsKey(num))
            {
                pair newPair= new pair(A[i],num);
                temp.add(newPair);
            }
        }
        
        pair ans[]= new pair[temp.size()];
        for(int i=0; i<temp.size(); i++)
            ans[i]= temp.get(i);
            
        return ans;
        
    }
}
