********************************************************************************************************************************************************************
                                                                      Remove Duplicates
********************************************************************************************************************************************************************

GFG Link:- https://practice.geeksforgeeks.org/problems/remove-duplicates3034/1?page=3&status[]=unsolved&curated[]=1&sortBy=submissions


Given a string without spaces, the task is to remove duplicates from it.

Note: The original order of characters must be kept the same. 

Example 1:

Input: S = "zvvo"
Output: "zvo"
Explanation: Only keep the first
occurrence
Example 2:

Input: S = "gfg"
Output: gf
Explanation: Only keep the first
occurrence
Your task:
Your task is to complete the function removeDups() which takes a single string as input and returns the string. You need not take any input or print anything.
 

Expected Time Complexity: O(|s|)
Expected Auxiliary Space: O(constant)

Constraints:
1 <= |S| <= 105
S conatins lowercase english alphabets


********************************************************************************************************************************************************************
                                                                               CODE
********************************************************************************************************************************************************************

//User function Template for Java

class Solution {
    String removeDups(String S) {
        int n= S.length();
        HashMap<Character,Integer> map= new HashMap<>();
        String ans="";
        for(int i=0; i<n; i++)
        {
            char ch= S.charAt(i);
            if(!map.containsKey(ch))
                ans= ans+ch;
            map.put(ch,1);
        }
        return ans;
    }
}
